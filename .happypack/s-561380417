'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.routingPathnameSelector = exports.isLoadingSelector = undefined;

var _redux = require('redux');

var _loading = require('./loading');

var fromLoading = _interopRequireWildcard(_loading);

var _routing = require('./routing');

var fromRouting = _interopRequireWildcard(_routing);

var _actionsHistory = require('./actionsHistory');

var _actionsHistory2 = _interopRequireDefault(_actionsHistory);

var _utils = require('../utils/utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var allReducers = {
    loading: fromLoading.default,
    routing: fromRouting.default
};

if ((0, _utils.isTesting)()) {
    allReducers.actionsHistory = _actionsHistory2.default;
}

var rootReducer = (0, _redux.combineReducers)(allReducers);

exports.default = rootReducer;

/* loaders selectors start */

var isLoadingSelector = exports.isLoadingSelector = function isLoadingSelector(state, loader) {
    return fromLoading.isLoadingSelector(state.loading, loader);
};
/* loaders selectors end */

/* routing selectors start */
var routingPathnameSelector = exports.routingPathnameSelector = function routingPathnameSelector(state) {
    return fromRouting.pathnameSelector(state.routing);
};
/* routing selectors end */